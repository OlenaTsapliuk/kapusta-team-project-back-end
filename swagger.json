{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Kapusta-team-project",
    "description": "API for tracking income and expenses",
    "contact": {
      "email": "tsaplyk_olena@ukr.net"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "http://localhost:3001/",
      "description": "Test server"
    },
    {
      "url": "https://kapusta-team-project-back-end.herokuapp.com/",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Authorization",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transaction",
      "description": "Transaction endpoints"
    },
    {
      "name": "Category",
      "description": "Categories endpoints"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Authorization"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered. Please verify your email!!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "409": {
            "description": "User was already registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageConflict"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/verify": {
      "get": {
        "tags": ["Authorization"],
        "summary": "User verification by SendGrid",
        "parameters": [
          {
            "in": "path",
            "name": "verificationToken",
            "required": true,
            "type": "string",
            "description": "Verification token sent by SendGrid"
          }
        ],
        "responses": {
          "200": {
            "description": "Verification successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationLink"
                }
              }
            }
          },
          "404": {
            "description": "User not found by token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageNotFound"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Authorization"],
        "summary": "Resending verification message",
        "parameters": [],
        "requestBody": {
          "description": "User's email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Email"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email was resent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationLink"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "404": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/signin": {
      "post": {
        "tags": ["Authorization"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "User email and password for login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Wrong email or password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageUnauthorized"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Email": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email",
            "example": "user@ukr.net"
          }
        }
      },
      "PersonalData": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email can be in the format user@ukr.net or user@gmail.com",
            "example": "user@ukr.net"
          },
          "password": {
            "type": "string",
            "description": "User's password (minlength 6 symbols!)",
            "example": "qwerty123"
          }
        }
      },
      "SignupResponse": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 201
          },
          "message": {
            "type": "string",
            "description": "Success message",
            "example": "Register success"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email",
            "example": "user@ukr.net"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "error"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 400
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "\"email\" must be a valid email"
          }
        }
      },
      "MessageConflict": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "error"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 409
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "User with this email already exist"
          }
        }
      },
      "MessageNotFound": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "error"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 404
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "User not found"
          }
        }
      },
      "VerificationLink": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 200
          },
          "message": {
            "type": "string",
            "description": "Verification message",
            "example": "Verification successful"
          }
        }
      },
      "ServerMessage": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "Server error"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 500
          },
          "message": {
            "type": "string",
            "description": "Server error",
            "example": "Internal Server Error"
          }
        }
      },
      "SigninResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 200
          },
          "message": {
            "type": "string",
            "description": "Success message",
            "example": "Login success"
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxYjhiNjQ2MDFmNDA2YTg5NWYxNzYyNyIsImlhdCI6MTYzOTQ5NjI1MCwiZXhwIjoxNjM5NDk5ODUwfQ._cwnVML85O4Y-rGio-ghDJcg2H7t_C3Uxb40b24HmyU"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email",
            "example": "user@ukr.net"
          },
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "61b8b64601f406a895f17627"
          },
          "balance": {
            "type": "integer",
            "format": "int32",
            "description": "User's balance (default balance:0)",
            "example": "0"
          }
        }
      },
      "MessageUnauthorized": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "error"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 401
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Wrong email or password"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
