{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Kapusta-team-project",
    "description": "API for tracking income and expenses",
    "contact": {
      "email": "tsaplyk_olena@ukr.net"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "http://localhost:3001/",
      "description": "Test server"
    },
    {
      "url": "https://kapusta-team-project-back-end.herokuapp.com/",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Authorization",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transaction",
      "description": "Transaction endpoints"
    },
    {
      "name": "Category",
      "description": "Categories endpoints"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Authorization"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered. Please verify your email!!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "409": {
            "description": "User was already registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageConflict"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerMessage"
                }
              }
            }
          }
        }
      }
    },

    "/api/users/signin": {
      "post": {
        "tags": ["Authorization"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "User email and password for login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Wrong email or password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageUnauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["Authorization"],
        "summary": "User's log out",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's log out",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Email"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful log out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogout"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/google": {
      "get": {
        "tags": ["Authorization"],
        "summary": "Authorization user from GoogleAuth",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          }
        }
      }
    },
    "/api/users/google-redirect": {
      "get": {
        "tags": ["Authorization"],
        "summary": "Authorization user from GoogleAuth  after redirected",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          }
        }
      }
    },
    "/api/users/setBalance": {
      "post": {
        "tags": ["Authorization"],
        "summary": "Set user balance after first signin",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Balance",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetBalanceRquest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful balance setting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetBalanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/transactions/expense": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Save user expense transaction",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Transaction data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/transactions/income": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Save user income transaction",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Transaction data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/transactions/{:transactionId}": {
      "delete": {
        "tags": ["Transaction"],
        "summary": "Remove transaction",
        "parameters": [
          {
            "in": "path",
            "name": ":transactionId",
            "required": true,
            "type": "string",
            "description": "Trasaction id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Transaction deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/api/transactions/income/{:date}": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get all income transactions for requested month",
        "parameters": [
          {
            "in": "path",
            "name": ":date",
            "required": true,
            "type": "string",
            "description": "Date in format M-YYYY, or MM-YYYY"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonthlyIncomeTransactionsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/transactions/expense/{:date}": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get all expense transactions for requested month",
        "parameters": [
          {
            "in": "path",
            "name": ":date",
            "required": true,
            "type": "string",
            "description": "Date in format M-YYYY, or MM-YYYY"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonthlyExpenseTransactionsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/transactions/{:date}": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get all transaction data for requested month",
        "parameters": [
          {
            "in": "path",
            "name": ":date",
            "required": true,
            "type": "string",
            "description": "Date in format M-YYYY, or MM-YYYY"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonthlyTransactionsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/transactions/annual/{:year}": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get all transactions data for requested year",
        "parameters": [
          {
            "in": "path",
            "name": ":year",
            "required": true,
            "type": "string",
            "description": "Year in format YYYY"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnualTransactionsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/categories/": {
      "post": {
        "tags": ["Category"],
        "summary": "Set new custom category",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Category",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCategoryRquest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Category alrady exists"
          }
        }
      }
    },
    "/api/categories/{:categoryId}": {
      "delete": {
        "tags": ["Category"],
        "summary": "Set new custom category",
        "parameters": [
          {
            "in": "path",
            "name": ":categoryId",
            "required": true,
            "type": "string",
            "description": "Id of category"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Category was deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    },
    "/api/categories/getAll": {
      "get": {
        "tags": ["Category"],
        "summary": "Get all users actegories includes basic",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllCategoryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Email": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email",
            "example": "user@ukr.net"
          }
        }
      },
      "PersonalData": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email can be in the format user@ukr.net or user@gmail.com",
            "example": "user@ukr.net"
          },
          "password": {
            "type": "string",
            "description": "User's password (minlength 6 symbols!)",
            "example": "qwerty123"
          }
        }
      },
      "SignupResponse": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 201
          },
          "message": {
            "type": "string",
            "description": "Success message",
            "example": "Register success"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "description": "User's email",
                "example": "user@ukr.net"
              },
              "password": {
                "type": "string",
                "description": "User's password",
                "example": "qwerty123"
              }
            }
          }
        }
      },
      "SetBalanceResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 201
          },
          "message": {
            "type": "string",
            "description": "Success message",
            "example": "User balance set as 5555 value"
          },
          "balance": {
            "type": "number",
            "description": "Balance",
            "example": 5555
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "error"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 400
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "\"email\" must be a valid email"
          }
        }
      },
      "UserLogout": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 204
          },
          "message": {
            "type": "string",
            "description": "Success message",
            "example": "User logout"
          }
        }
      },
      "MessageConflict": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "error"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 409
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "User with this email already exist"
          }
        }
      },
      "MessageNotFound": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "error"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 404
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "User not found"
          }
        }
      },

      "ServerMessage": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "Server error"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 500
          },
          "message": {
            "type": "string",
            "description": "Server error",
            "example": "Internal Server Error"
          }
        }
      },
      "SigninResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 200
          },
          "message": {
            "type": "string",
            "description": "Success message",
            "example": "Login success"
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "User's token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxYjhiNjQ2MDFmNDA2YTg5NWYxNzYyNyIsImlhdCI6MTYzOTQ5NjI1MCwiZXhwIjoxNjM5NDk5ODUwfQ._cwnVML85O4Y-rGio-ghDJcg2H7t_C3Uxb40b24HmyU"
              },
              "user": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email",
                    "example": "user@ukr.net"
                  },
                  "id": {
                    "type": "string",
                    "description": "User's id",
                    "example": "61b8b64601f406a895f17627"
                  },
                  "balance": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User's balance (default balance:0)",
                    "example": "0"
                  },
                  "balanceHasBeenSet": {
                    "type": "boolean",
                    "description": "Shows was balance already seted by user or not",
                    "example": false
                  }
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "error"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 401
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Unauthorized"
          }
        }
      },
      "MessageUnauthorized": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "error"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 401
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Wrong email or password"
          }
        }
      },
      "SetBalanceRquest": {
        "type": "object",
        "required": ["balance"],
        "properties": {
          "balance": {
            "type": "number",
            "description": "User's initial balance",
            "example": 10000
          }
        }
      },
      "TransactionRequest": {
        "type": "object",
        "required": ["sum", "transactionName", "income", "category"],
        "properties": {
          "sum": {
            "type": "number",
            "description": "Transaction sum",
            "example": 100
          },
          "transactionName": {
            "type": "string",
            "description": "Transaction name",
            "example": "Свинина"
          },
          "category": {
            "type": "string",
            "description": "Transaction category",
            "example": "Продукты"
          },
          "income": {
            "type": "boolean",
            "description": "If it is expense must - be false, if it is income - must true",
            "example": false
          }
        }
      },
      "TransactionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Transaction status",
            "example": "sucsess"
          },
          "code": {
            "type": "number",
            "description": "Transaction status code",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "sum": {
                "type": "number",
                "description": "Transaction sum",
                "example": 100
              },
              "transactionName": {
                "type": "string",
                "description": "Transaction name",
                "example": "Свинина"
              },
              "category": {
                "type": "string",
                "description": "Transaction category",
                "example": "Продукты"
              },
              "income": {
                "type": "boolean",
                "description": "If it is expense must - be false, if it is income - must true",
                "example": false
              },
              "owner": {
                "type": "string",
                "description": "Id of transaction owner",
                "example": "61b5c26b96ca9515048ae6eb"
              },
              "_id": {
                "type": "string",
                "description": "Id of transaction",
                "example": "61b9ceb088f0b2ad3107e195"
              },
              "createdAt": {
                "type": "date",
                "description": "Transaction creation date",
                "example": "2021-12-15T11:17:04.785Z"
              },
              "updatedAt": {
                "type": "date",
                "description": "Transaction update date",
                "example": "2021-12-15T11:17:04.785Z"
              }
            }
          },
          "balance": {
            "type": "number",
            "description": "User balance after success transaction",
            "example": 100000
          }
        }
      },
      "MonthlyIncomeTransactionsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Transaction status",
            "example": "sucsess"
          },
          "code": {
            "type": "number",
            "description": "Transaction status code",
            "example": 201
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sum": {
                  "type": "number",
                  "description": "Transaction sum",
                  "example": 100
                },
                "transactionName": {
                  "type": "string",
                  "description": "Transaction name",
                  "example": "Свинина"
                },
                "category": {
                  "type": "string",
                  "description": "Transaction category",
                  "example": "Продукты"
                },
                "income": {
                  "type": "boolean",
                  "description": "If it is expense must - be false, if it is income - must true",
                  "example": false
                },
                "owner": {
                  "type": "string",
                  "description": "Id of transaction owner",
                  "example": "61b5c26b96ca9515048ae6eb"
                },
                "_id": {
                  "type": "string",
                  "description": "Id of transaction",
                  "example": "61b9ceb088f0b2ad3107e195"
                },
                "createdAt": {
                  "type": "date",
                  "description": "Transaction creation date",
                  "example": "2021-12-15T11:17:04.785Z"
                },
                "updatedAt": {
                  "type": "date",
                  "description": "Transaction update date",
                  "example": "2021-12-15T11:17:04.785Z"
                }
              }
            },
            "example": [
              {
                "_id": "61b7426c4311bf9645a85522",
                "sum": 10000,
                "transactionName": "За декабрь",
                "owner": "61b5c26b96ca9515048ae6eb",
                "income": true,
                "category": "Зарплата",
                "createdAt": "2021-12-13T12:54:04.851Z",
                "updatedAt": "2021-12-13T12:54:04.851Z"
              },
              {
                "_id": "61b744d5775e72dc9d15518c",
                "sum": 10000,
                "transactionName": "За март",
                "owner": "61b5c26b96ca9515048ae6eb",
                "income": true,
                "category": "Зарплата",
                "createdAt": "2021-12-13T13:04:21.761Z",
                "updatedAt": "2021-12-13T13:04:21.761Z"
              }
            ]
          }
        }
      },
      "MonthlyExpenseTransactionsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Transaction status",
            "example": "sucsess"
          },
          "code": {
            "type": "number",
            "description": "Transaction status code",
            "example": 201
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sum": {
                  "type": "number",
                  "description": "Transaction sum",
                  "example": 100
                },
                "transactionName": {
                  "type": "string",
                  "description": "Transaction name",
                  "example": "Свинина"
                },
                "category": {
                  "type": "string",
                  "description": "Transaction category",
                  "example": "Продукты"
                },
                "income": {
                  "type": "boolean",
                  "description": "If it is expense must - be false, if it is income - must true",
                  "example": false
                },
                "owner": {
                  "type": "string",
                  "description": "Id of transaction owner",
                  "example": "61b5c26b96ca9515048ae6eb"
                },
                "_id": {
                  "type": "string",
                  "description": "Id of transaction",
                  "example": "61b9ceb088f0b2ad3107e195"
                },
                "createdAt": {
                  "type": "date",
                  "description": "Transaction creation date",
                  "example": "2021-12-15T11:17:04.785Z"
                },
                "updatedAt": {
                  "type": "date",
                  "description": "Transaction update date",
                  "example": "2021-12-15T11:17:04.785Z"
                }
              }
            },
            "example": [
              {
                "_id": "61b742094311bf9645a85503",
                "sum": 100,
                "transactionName": "Свинина",
                "owner": "61b5c26b96ca9515048ae6eb",
                "income": false,
                "category": "Продукты",
                "createdAt": "2021-12-13T12:52:25.500Z",
                "updatedAt": "2021-12-13T12:52:25.500Z"
              },
              {
                "_id": "61b742274311bf9645a8550d",
                "sum": 100,
                "transactionName": "Говядина",
                "owner": "61b5c26b96ca9515048ae6eb",
                "income": false,
                "category": "Продукты",
                "createdAt": "2021-12-13T12:52:55.099Z",
                "updatedAt": "2021-12-13T12:52:55.099Z"
              }
            ]
          }
        }
      },
      "MonthlyTransactionsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Transaction status",
            "example": "sucsess"
          },
          "code": {
            "type": "number",
            "description": "Transaction status code",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "allIncomes": {
                "type": "number",
                "description": "Sum of all incomes for requested month",
                "example": 55000
              },
              "allExpenses": {
                "type": "number",
                "description": "Sum of all expenses for requested month",
                "example": 4255
              },
              "incomes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "description": "Transaction category",
                      "example": "Зарплата"
                    },
                    "totalSum": {
                      "type": "number",
                      "description": "The total amount of funds received on this category for requested month",
                      "example": 50000
                    },
                    "iconName": {
                      "type": "string",
                      "description": "Current category icon name",
                      "example": "salary"
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "transactionName": {
                            "type": "string",
                            "description": "Transaction name",
                            "example": "За декабрь"
                          },
                          "totalSum": {
                            "type": "number",
                            "description": "The total amount of funds received on this transaction name for requested month",
                            "example": 50000
                          }
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "category": "Зарплата",
                    "totalSum": 5000,
                    "iconName": "salary",
                    "transactions": [
                      {
                        "transactionName": "За декабрь",
                        "transactionTotalSum": 50000
                      }
                    ]
                  },
                  {
                    "category": "Прочие доходы",
                    "totalSum": 5000,
                    "transactions": [
                      {
                        "transactionName": "Премия",
                        "transactionTotalSum": 5000
                      }
                    ]
                  }
                ]
              },
              "expenses": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "description": "Transaction category",
                      "example": "Продукты"
                    },
                    "totalSum": {
                      "type": "number",
                      "description": "Total expenses spent on this category for requested month",
                      "example": 5500
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "transactionName": {
                            "type": "string",
                            "description": "Transaction name",
                            "example": "Свинина"
                          },
                          "totalSum": {
                            "type": "number",
                            "description": "Total expenses spent on this transaction name for requested month",
                            "example": 370
                          }
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "category": "Продукты",
                    "totalSum": 3255,
                    "iconName": "produkty",
                    "transactions": [
                      {
                        "transactionName": "Свинина",
                        "transactionTotalSum": 2000
                      },
                      {
                        "transactionName": "Говядина",
                        "transactionTotalSum": 800
                      },
                      {
                        "transactionName": "Курятина",
                        "transactionTotalSum": 555
                      }
                    ]
                  },
                  {
                    "category": "Коммуналка, связь",
                    "totalSum": 1000,
                    "iconName": "kommunalka",
                    "transactions": [
                      {
                        "transactionName": "Электричество",
                        "transactionTotalSum": 1000
                      }
                    ]
                  }
                ]
              }
            }
          }
        }
      },
      "AnnualTransactionsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Request status",
            "example": "sucsess"
          },
          "code": {
            "type": "number",
            "description": "Request status code",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "incomesForYear": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "month": {
                      "type": "string",
                      "description": "Month in short format",
                      "example": "Dec"
                    },
                    "sum": {
                      "type": "number",
                      "description": "Total sum for requested month, if there was no transactions, value will be 0",
                      "example": 3300
                    }
                  }
                },
                "example": [
                  {
                    "month": "Jan",
                    "sum": 10000
                  },
                  {
                    "month": "Feb",
                    "sum": 10000
                  },
                  {
                    "month": "Mar",
                    "sum": 33333
                  },
                  {
                    "month": "Apr",
                    "sum": 0
                  },
                  {
                    "month": "May",
                    "sum": 0
                  },
                  {
                    "month": "Jun",
                    "sum": 0
                  },
                  {
                    "month": "Jul",
                    "sum": 0
                  },
                  {
                    "month": "Aug",
                    "sum": 0
                  },
                  {
                    "month": "Sep",
                    "sum": 0
                  },
                  {
                    "month": "Oct",
                    "sum": 0
                  },
                  {
                    "month": "Nov",
                    "sum": 0
                  },
                  {
                    "month": "Dec",
                    "sum": 10000
                  }
                ]
              },
              "expensesForYear": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "month": {
                      "type": "string",
                      "description": "Month in short format",
                      "example": "Dec"
                    },
                    "sum": {
                      "type": "number",
                      "description": "Total sum for requested month, if there was no transactions, value will be 0",
                      "example": 3300
                    }
                  }
                },
                "example": [
                  {
                    "month": "Jan",
                    "sum": 0
                  },
                  {
                    "month": "Feb",
                    "sum": 0
                  },
                  {
                    "month": "Mar",
                    "sum": 0
                  },
                  {
                    "month": "Apr",
                    "sum": 0
                  },
                  {
                    "month": "May",
                    "sum": 0
                  },
                  {
                    "month": "Jun",
                    "sum": 0
                  },
                  {
                    "month": "Jul",
                    "sum": 0
                  },
                  {
                    "month": "Aug",
                    "sum": 0
                  },
                  {
                    "month": "Sep",
                    "sum": 0
                  },
                  {
                    "month": "Oct",
                    "sum": 0
                  },
                  {
                    "month": "Nov",
                    "sum": 0
                  },
                  {
                    "month": "Dec",
                    "sum": 3455
                  }
                ]
              }
            }
          }
        }
      },
      "SetCategoryRquest": {
        "type": "object",
        "required": ["category", "income"],
        "properties": {
          "category": {
            "type": "string",
            "description": "Transaction category",
            "example": "Премия"
          },
          "income": {
            "type": "boolean",
            "description": "If it is expense must - be false, if it is income - must true",
            "example": true
          },
          "iconName": {
            "type": "string",
            "description": "Icon name from svg-sprite",
            "example": "produkty"
          }
        }
      },
      "CategoryResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response status code",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "category": {
                "type": "string",
                "description": "Transaction category",
                "example": "Премия"
              },
              "income": {
                "type": "boolean",
                "description": "If it is expense must - be false, if it is income - must true",
                "example": true
              },
              "basicCategory": {
                "type": "boolean",
                "description": "If it is basic category - false, if it is custom - true",
                "example": false
              },
              "iconName": {
                "type": "string",
                "description": "Icon name from svg-sprite",
                "example": "premiya"
              },
              "owner": {
                "type": "string",
                "description": "Id of category owner",
                "example": "61b5c26b96ca9515048ae6eb"
              },
              "_id": {
                "type": "string",
                "description": "Id of category",
                "example": "61b9ceb088f0b2ad3107e195"
              },
              "createdAt": {
                "type": "date",
                "description": "Category creation date",
                "example": "2021-12-15T11:17:04.785Z"
              },
              "updatedAt": {
                "type": "date",
                "description": "Category update date",
                "example": "2021-12-15T11:17:04.785Z"
              }
            }
          }
        }
      },
      "GetAllCategoryResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response status code",
            "example": 201
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string",
                  "description": "Transaction category",
                  "example": "Премия"
                },
                "income": {
                  "type": "boolean",
                  "description": "If it is expense must - be false, if it is income - must true",
                  "example": true
                },
                "basicCategory": {
                  "type": "boolean",
                  "description": "If it is basic category - false, if it is custom - true",
                  "example": false
                },
                "owner": {
                  "type": "string",
                  "description": "Id of category owner. This field may not be available if the category is basic",
                  "example": "61b5c26b96ca9515048ae6eb"
                },
                "_id": {
                  "type": "string",
                  "description": "Id of category",
                  "example": "61b9ceb088f0b2ad3107e195"
                },
                "createdAt": {
                  "type": "date",
                  "description": "Category creation date",
                  "example": "2021-12-15T11:17:04.785Z"
                },
                "updatedAt": {
                  "type": "date",
                  "description": "Category update date",
                  "example": "2021-12-15T11:17:04.785Z"
                }
              }
            },
            "example": [
              {
                "_id": "61b60d76c9aee519a92c8dc9",
                "category": "Прочие",
                "income": false,
                "basicCategory": true,
                "createdAt": "2021-12-12T14:55:50.956Z",
                "updatedAt": "2021-12-12T14:55:50.956Z"
              },
              {
                "_id": "61b9fd354b7c1a068a6b7dad",
                "category": "Премия",
                "income": true,
                "basicCategory": false,
                "owner": "61b5c26b96ca9515048ae6eb",
                "createdAt": "2021-12-15T14:35:33.202Z",
                "updatedAt": "2021-12-15T14:35:33.202Z"
              }
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
